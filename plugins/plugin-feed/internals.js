'use strict';

require('babel-core/register');
require('babel-polyfill');

var fs = require('fs');
var pify = require('pify');

var writeFile = pify(fs.writeFile);

var runQuery = function runQuery(handler, query) {
  return handler(query).then(function (r) {
    if (r.errors) {
      throw new Error(r.errors.join(', '));
    }

    return r.data;
  });
};

var defaultOptions = {
  // Override if you want to manually specify the RSS "generator" tag.
  generator: 'GatsbyJS',

  // Run a default query to gather some information about the site.
  query: '\n    {\n      site {\n        siteMetadata {\n          title\n          description\n          siteUrl\n        }\n      }\n    }\n  ',

  // Setup a few RSS object, merging on various feed-speciupfic options.
  setup: function setup(_ref) {
    var siteMetadata = _ref.site.siteMetadata,
        rest = _ref.rest;

    return Object.assign({}, siteMetadata, rest);
  },

  // Create a default RSS feed. Others may be added by using the format below.
  feeds: [{
    query: '\n      {\n        allMarkdownRemark(\n          limit: 1000,\n          sort: {\n            order: DESC,\n            fields: [frontmatter___date]\n          },\n          frontmatter: {\n            draft: { ne: true }\n          }\n        ) {\n          edges {\n            node {\n              frontmatter {\n                title\n                date\n              }\n              fields {\n                slug\n              }\n              excerpt\n              html\n            }\n          }\n        }\n      }\n    ',

    // Where we will save the feed generated by this query.
    output: 'rss.xml'
  }]
};

module.exports = {
  writeFile: writeFile,
  runQuery: runQuery,
  defaultOptions: defaultOptions
};